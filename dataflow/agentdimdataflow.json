{
	"name": "agentdimdataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "agent_source_dataset",
						"type": "DatasetReference"
					},
					"name": "Aagentsource1"
				},
				{
					"dataset": {
						"referenceName": "agent_source_dataset",
						"type": "DatasetReference"
					},
					"name": "Bagentsource2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"rejectedDataLinkedService": {
						"referenceName": "MadlangPeopleMabuhayStorage",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "leftjoin1",
					"description": "left join s_agent1 to s_agent2 via unit_manager_id = agent_id"
				},
				{
					"name": "agentmasterlistselectA"
				},
				{
					"name": "MANAGERFULLNAMECONCAT",
					"description": "concatenate agent names"
				},
				{
					"name": "agentmasterlistselectB",
					"description": "agent_id"
				},
				{
					"name": "sumcasedrcount"
				},
				{
					"name": "DRCOUNTGROUPBY"
				},
				{
					"name": "SOURCETODRCOUNT"
				},
				{
					"name": "FINALSELECT"
				},
				{
					"name": "xfmagent"
				},
				{
					"name": "xfmdirectreportcount"
				},
				{
					"name": "concatname"
				},
				{
					"name": "xfmagentmasterlist"
				},
				{
					"name": "xfmagentlist1"
				},
				{
					"name": "FINALJOIN"
				},
				{
					"name": "selectfinalce"
				}
			],
			"scriptLines": [
				"source(output(",
				"          AGENT_ID as string,",
				"          AGENT_FIRSTNAME as string,",
				"          AGENT_LASTNAME as string,",
				"          UNIT_MANAGER_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('roundRobin', 2)) ~> Aagentsource1",
				"source(output(",
				"          AGENT_ID as string,",
				"          AGENT_FIRSTNAME as string,",
				"          AGENT_LASTNAME as string,",
				"          UNIT_MANAGER_ID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     partitionBy('roundRobin', 2)) ~> Bagentsource2",
				"MANAGERFULLNAMECONCAT, agentmasterlistselectB join(AGENT_ID_A == agentmasterlistselectB@UNIT_MANAGER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> leftjoin1",
				"Aagentsource1 select(mapColumn(",
				"          AGENT_ID_A = AGENT_ID,",
				"          AGENT_FIRSTNAME,",
				"          AGENT_LASTNAME,",
				"          UNIT_MANAGER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> agentmasterlistselectA",
				"agentmasterlistselectA derive(UNIT_MANAGER_NAME = concat(AGENT_FIRSTNAME,' ', AGENT_LASTNAME)) ~> MANAGERFULLNAMECONCAT",
				"Bagentsource2 select(mapColumn(",
				"          AGENT_ID_B = AGENT_ID,",
				"          UNIT_MANAGER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> agentmasterlistselectB",
				"xfmagentmasterlist derive(DR_COUNT = iif(UNIT_MANAGER_ID != AGENT_ID_A, 1, 0)) ~> sumcasedrcount",
				"sumcasedrcount aggregate(groupBy(UNIT_MANAGER_ID,",
				"          AGENT_ID_B,",
				"          AGENT_FULLNAME),",
				"     DR_COUNT = sum(DR_COUNT)) ~> DRCOUNTGROUPBY",
				"xfmagent, xfmdirectreportcount join(xfmagent@AGENT_ID == xfmdirectreportcount@AGENT_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SOURCETODRCOUNT",
				"concatname select(mapColumn(",
				"          AGENT_ID,",
				"          AGENT_FULLNAME,",
				"          MANAGER_FULLNAME,",
				"          UNIT_MANAGER_ID,",
				"          DR_COUNT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> FINALSELECT",
				"Bagentsource2 select(mapColumn(",
				"          AGENT_ID,",
				"          AGENT_FIRSTNAME,",
				"          AGENT_LASTNAME,",
				"          UNIT_MANAGER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xfmagent",
				"DRCOUNTGROUPBY select(mapColumn(",
				"          AGENT_ID = AGENT_ID_B,",
				"          UNIT_MANAGER_ID,",
				"          MANAGER_FULLNAME = AGENT_FULLNAME,",
				"          DR_COUNT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xfmdirectreportcount",
				"selectfinalce derive(AGENT_FULLNAME = concat(AGENT_FIRSTNAME,' ',AGENT_LASTNAME)) ~> concatname",
				"leftjoin1 select(mapColumn(",
				"          AGENT_ID_A,",
				"          AGENT_FULLNAME = UNIT_MANAGER_NAME,",
				"          AGENT_ID_B,",
				"          UNIT_MANAGER_ID = agentmasterlistselectB@UNIT_MANAGER_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xfmagentmasterlist",
				"SOURCETODRCOUNT select(mapColumn(",
				"          AGENT_ID = xfmagent@AGENT_ID,",
				"          AGENT_FIRSTNAME,",
				"          AGENT_LASTNAME,",
				"          UNIT_MANAGER_ID = xfmagent@UNIT_MANAGER_ID,",
				"          MANAGER_FULLNAME,",
				"          DR_COUNT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> xfmagentlist1",
				"xfmagentlist1, xfmdirectreportcount join(xfmagentlist1@UNIT_MANAGER_ID == xfmdirectreportcount@AGENT_ID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> FINALJOIN",
				"FINALJOIN select(mapColumn(",
				"          AGENT_ID = xfmagentlist1@AGENT_ID,",
				"          AGENT_FIRSTNAME,",
				"          AGENT_LASTNAME,",
				"          UNIT_MANAGER_ID = xfmagentlist1@UNIT_MANAGER_ID,",
				"          MANAGER_FULLNAME = xfmagentlist1@MANAGER_FULLNAME,",
				"          DR_COUNT = xfmagentlist1@DR_COUNT",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectfinalce",
				"FINALSELECT sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     truncate: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 0,",
				"     mapColumn(",
				"          AGENT_ID,",
				"          AGENT_FULLNAME,",
				"          MANAGER_FULLNAME,",
				"          UNIT_MANAGER_ID,",
				"          DR_COUNT",
				"     ),",
				"     format: 'parquet') ~> sink1"
			]
		}
	}
}